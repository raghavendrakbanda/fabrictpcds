{
    "name": "LoadTPCDS",
    "properties": {
        "activities": [
            {
                "name": "ForEach - Create Tables",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Wait - 5 seconds",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Filter - All Except store_sales').output.value",
                        "type": "Expression"
                    },
                    "batchCount": 23,
                    "activities": [
                        {
                            "name": "Lookup - Load From External Table",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat(json(item()).SqlStatement, ';SELECT 1 as a')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "DS_Synapse_Managed_Identity",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "DatabaseName": {
                                            "value": "@pipeline().parameters.DatabaseName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        }
                    ]
                }
            },
            {
                "name": "Lookup - Create External Tables",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SqlDWSource",
                        "sqlReaderQuery": "IF NOT EXISTS (SELECT 1 FROM sys.database_scoped_credentials WHERE [name] = 'AzureStorageCredential_MSI')  CREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential_MSI WITH IDENTITY = 'Managed Identity';EXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'call_center_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.call_center_ext; CREATE EXTERNAL TABLE stagingTPCDS.call_center_ext (cc_call_center_sk INT,cc_call_center_id CHAR(16),cc_rec_start_date DATE,cc_rec_end_date DATE,cc_closed_date_sk INT,cc_open_date_sk INT,cc_name VARCHAR(19),cc_class VARCHAR(6),cc_employees INT,cc_sq_ft INT,cc_hours VARCHAR(8),cc_manager VARCHAR(21),cc_mkt_id INT,cc_mkt_class VARCHAR(50),cc_mkt_desc VARCHAR(100),cc_market_manager VARCHAR(18),cc_division INT,cc_division_name VARCHAR(5),cc_company INT,cc_company_name VARCHAR(5),cc_street_number CHAR(3),cc_street_name VARCHAR(17),cc_street_type VARCHAR(7),cc_suite_number VARCHAR(9),cc_city VARCHAR(13),cc_county VARCHAR(22),cc_state CHAR(2),cc_zip CHAR(5),cc_country CHAR(13),cc_gmt_offset NUMERIC(5,2),cc_tax_percentage NUMERIC(5,2)) WITH ( LOCATION = '/REPLACE_LOCATION/call_center/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'catalog_page_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.catalog_page_ext; CREATE EXTERNAL TABLE stagingTPCDS.catalog_page_ext (cp_catalog_page_sk INT,cp_catalog_page_id CHAR(16),cp_start_date_sk INT,cp_end_date_sk INT,cp_department CHAR(10),cp_catalog_number INT,cp_catalog_page_number INT,cp_description VARCHAR(99),cp_type VARCHAR(9)) WITH ( LOCATION = '/REPLACE_LOCATION/catalog_page/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'catalog_returns_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.catalog_returns_ext; CREATE EXTERNAL TABLE stagingTPCDS.catalog_returns_ext (cr_returned_date_sk INT,cr_returned_time_sk INT,cr_item_sk INT,cr_refunded_customer_sk INT,cr_refunded_cdemo_sk INT,cr_refunded_hdemo_sk INT,cr_refunded_addr_sk INT,cr_returning_customer_sk INT,cr_returning_cdemo_sk INT,cr_returning_hdemo_sk INT,cr_returning_addr_sk INT,cr_call_center_sk INT,cr_catalog_page_sk INT,cr_ship_mode_sk INT,cr_warehouse_sk INT,cr_reason_sk INT,cr_order_number BIGINT,cr_return_quantity INT,cr_return_amount NUMERIC(7,2),cr_return_tax NUMERIC(7,2),cr_return_amt_inc_tax NUMERIC(7,2),cr_fee NUMERIC(7,2),cr_return_ship_cost NUMERIC(7,2),cr_refunded_cash NUMERIC(7,2),cr_reversed_charge NUMERIC(7,2),cr_store_credit NUMERIC(7,2),cr_net_loss NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/catalog_returns/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'catalog_sales_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.catalog_sales_ext; CREATE EXTERNAL TABLE stagingTPCDS.catalog_sales_ext (cs_sold_date_sk INT,cs_sold_time_sk INT,cs_ship_date_sk INT,cs_bill_customer_sk INT,cs_bill_cdemo_sk INT,cs_bill_hdemo_sk INT,cs_bill_addr_sk INT,cs_ship_customer_sk INT,cs_ship_cdemo_sk INT,cs_ship_hdemo_sk INT,cs_ship_addr_sk INT,cs_call_center_sk INT,cs_catalog_page_sk INT,cs_ship_mode_sk INT,cs_warehouse_sk INT,cs_item_sk INT,cs_promo_sk INT,cs_order_number BIGINT,cs_quantity INT,cs_wholesale_cost NUMERIC(7,2),cs_list_price NUMERIC(7,2),cs_sales_price NUMERIC(7,2),cs_ext_discount_amt NUMERIC(7,2),cs_ext_sales_price NUMERIC(7,2),cs_ext_wholesale_cost NUMERIC(7,2),cs_ext_list_price NUMERIC(7,2),cs_ext_tax NUMERIC(7,2),cs_coupon_amt NUMERIC(7,2),cs_ext_ship_cost NUMERIC(7,2),cs_net_paid NUMERIC(7,2),cs_net_paid_inc_tax NUMERIC(7,2),cs_net_paid_inc_ship NUMERIC(7,2),cs_net_paid_inc_ship_tax NUMERIC(7,2),cs_net_profit NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/catalog_sales/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'customer_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.customer_ext; CREATE EXTERNAL TABLE stagingTPCDS.customer_ext (c_customer_sk INT,c_customer_id CHAR(16),c_current_cdemo_sk INT,c_current_hdemo_sk INT,c_current_addr_sk INT,c_first_shipto_date_sk INT,c_first_sales_date_sk INT,c_salutation VARCHAR(4),c_first_name VARCHAR(11),c_last_name VARCHAR(13),c_preferred_cust_flag CHAR(1),c_birth_day INT,c_birth_month INT,c_birth_year INT,c_birth_country VARCHAR(20),c_login CHAR(1),c_email_address VARCHAR(49),c_last_review_date CHAR(7)) WITH ( LOCATION = '/REPLACE_LOCATION/customer/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'customer_address_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.customer_address_ext; CREATE EXTERNAL TABLE stagingTPCDS.customer_address_ext (ca_address_sk INT,ca_address_id CHAR(16),ca_street_number VARCHAR(4),ca_street_name VARCHAR(21),ca_street_type VARCHAR(9),ca_suite_number VARCHAR(9),ca_city VARCHAR(20),ca_county VARCHAR(28),ca_state CHAR(2),ca_zip CHAR(5),ca_country CHAR(13),ca_gmt_offset NUMERIC(5,2),ca_location_type VARCHAR(13)) WITH ( LOCATION = '/REPLACE_LOCATION/customer_address/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'customer_demographics_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.customer_demographics_ext; CREATE EXTERNAL TABLE stagingTPCDS.customer_demographics_ext (cd_demo_sk INT,cd_gender CHAR(1),cd_marital_status CHAR(1),cd_education_status VARCHAR(15),cd_purchase_estimate INT,cd_credit_rating VARCHAR(9),cd_dep_count INT,cd_dep_employed_count INT,cd_dep_college_count INT) WITH ( LOCATION = '/REPLACE_LOCATION/customer_demographics/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'date_dim_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.date_dim_ext; CREATE EXTERNAL TABLE stagingTPCDS.date_dim_ext (d_date_sk INT,d_date_id CHAR(16),d_date DATE,d_month_seq INT,d_week_seq INT,d_quarter_seq INT,d_year INT,d_dow INT,d_moy INT,d_dom INT,d_qoy INT,d_fy_year INT,d_fy_quarter_seq INT,d_fy_week_seq INT,d_day_name VARCHAR(9),d_quarter_name CHAR(6),d_holiday CHAR(1),d_weekend CHAR(1),d_following_holiday CHAR(1),d_first_dom INT,d_last_dom INT,d_same_day_ly INT,d_same_day_lq INT,d_current_day CHAR(1),d_current_week CHAR(1),d_current_month CHAR(1),d_current_quarter CHAR(1),d_current_year CHAR(1)) WITH ( LOCATION = '/REPLACE_LOCATION/date_dim/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'household_demographics_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.household_demographics_ext; CREATE EXTERNAL TABLE stagingTPCDS.household_demographics_ext (hd_demo_sk INT,hd_income_band_sk INT,hd_buy_potential VARCHAR(10),hd_dep_count INT,hd_vehicle_count INT) WITH ( LOCATION = '/REPLACE_LOCATION/household_demographics/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'income_band_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.income_band_ext; CREATE EXTERNAL TABLE stagingTPCDS.income_band_ext (ib_income_band_sk INT,ib_lower_bound INT,ib_upper_bound INT) WITH ( LOCATION = '/REPLACE_LOCATION/income_band/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'inventory_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.inventory_ext; CREATE EXTERNAL TABLE stagingTPCDS.inventory_ext (inv_date_sk INT,inv_item_sk INT,inv_warehouse_sk INT,inv_quantity_on_hand INT) WITH ( LOCATION = '/REPLACE_LOCATION/inventory/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'item_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.item_ext; CREATE EXTERNAL TABLE stagingTPCDS.item_ext (i_item_sk INT,i_item_id CHAR(16),i_rec_start_date DATE,i_rec_end_date DATE,i_item_desc VARCHAR(200),i_current_price NUMERIC(7,2),i_wholesale_cost NUMERIC(7,2),i_brand_id INT,i_brand VARCHAR(22),i_class_id INT,i_class VARCHAR(15),i_category_id INT,i_category VARCHAR(11),i_manufact_id INT,i_manufact VARCHAR(15),i_size VARCHAR(11),i_formulation CHAR(20),i_color VARCHAR(10),i_units VARCHAR(7),i_container CHAR(7),i_manager_id INT,i_product_name VARCHAR(30)) WITH ( LOCATION = '/REPLACE_LOCATION/item/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'promotion_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.promotion_ext; CREATE EXTERNAL TABLE stagingTPCDS.promotion_ext (p_promo_sk INT,p_promo_id CHAR(16),p_start_date_sk INT,p_end_date_sk INT,p_item_sk INT,p_cost NUMERIC(15,2),p_response_target INT,p_promo_name VARCHAR(5),p_channel_dmail CHAR(1),p_channel_email CHAR(1),p_channel_catalog CHAR(1),p_channel_tv CHAR(1),p_channel_radio CHAR(1),p_channel_press CHAR(1),p_channel_event CHAR(1),p_channel_demo CHAR(1),p_channel_details VARCHAR(60),p_purpose CHAR(7),p_discount_active CHAR(1)) WITH ( LOCATION = '/REPLACE_LOCATION/promotion/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'reason_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.reason_ext; CREATE EXTERNAL TABLE stagingTPCDS.reason_ext (r_reason_sk INT,r_reason_id CHAR(16),r_reason_desc VARCHAR(43)) WITH ( LOCATION = '/REPLACE_LOCATION/reason/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'ship_mode_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.ship_mode_ext; CREATE EXTERNAL TABLE stagingTPCDS.ship_mode_ext (sm_ship_mode_sk INT,sm_ship_mode_id CHAR(16),sm_type VARCHAR(9),sm_code VARCHAR(7),sm_carrier VARCHAR(14),sm_contract VARCHAR(19)) WITH ( LOCATION = '/REPLACE_LOCATION/ship_mode/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'store_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.store_ext; CREATE EXTERNAL TABLE stagingTPCDS.store_ext (s_store_sk INT,s_store_id CHAR(16),s_rec_start_date DATE,s_rec_end_date DATE,s_closed_date_sk INT,s_store_name VARCHAR(5),s_number_employees INT,s_floor_space INT,s_hours VARCHAR(8),s_manager VARCHAR(19),s_market_id INT,s_geography_class CHAR(7),s_market_desc VARCHAR(100),s_market_manager VARCHAR(21),s_division_id INT,s_division_name CHAR(7),s_company_id INT,s_company_name CHAR(7),s_street_number VARCHAR(3),s_street_name VARCHAR(20),s_street_type VARCHAR(9),s_suite_number VARCHAR(9),s_city VARCHAR(15),s_county VARCHAR(22),s_state CHAR(2),s_zip CHAR(5),s_country CHAR(13),s_gmt_offset NUMERIC(5,2),s_tax_precentage NUMERIC(5,2)) WITH ( LOCATION = '/REPLACE_LOCATION/store/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'store_returns_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.store_returns_ext; CREATE EXTERNAL TABLE stagingTPCDS.store_returns_ext (sr_returned_date_sk INT,sr_return_time_sk INT,sr_item_sk INT,sr_customer_sk INT,sr_cdemo_sk INT,sr_hdemo_sk INT,sr_addr_sk INT,sr_store_sk INT,sr_reason_sk INT,sr_ticket_number BIGINT,sr_return_quantity INT,sr_return_amt NUMERIC(7,2),sr_return_tax NUMERIC(7,2),sr_return_amt_inc_tax NUMERIC(7,2),sr_fee NUMERIC(7,2),sr_return_ship_cost NUMERIC(7,2),sr_refunded_cash NUMERIC(7,2),sr_reversed_charge NUMERIC(7,2),sr_store_credit NUMERIC(7,2),sr_net_loss NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/store_returns/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'store_sales_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.store_sales_ext; CREATE EXTERNAL TABLE stagingTPCDS.store_sales_ext (ss_sold_date_sk INT,ss_sold_time_sk INT,ss_item_sk INT,ss_customer_sk INT,ss_cdemo_sk INT,ss_hdemo_sk INT,ss_addr_sk INT,ss_store_sk INT,ss_promo_sk INT,ss_ticket_number BIGINT,ss_quantity INT,ss_wholesale_cost NUMERIC(7,2),ss_list_price NUMERIC(7,2),ss_sales_price NUMERIC(7,2),ss_ext_discount_amt NUMERIC(7,2),ss_ext_sales_price NUMERIC(7,2),ss_ext_wholesale_cost NUMERIC(7,2),ss_ext_list_price NUMERIC(7,2),ss_ext_tax NUMERIC(7,2),ss_coupon_amt NUMERIC(7,2),ss_net_paid NUMERIC(7,2),ss_net_paid_inc_tax NUMERIC(7,2),ss_net_profit NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/store_sales/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'time_dim_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.time_dim_ext; CREATE EXTERNAL TABLE stagingTPCDS.time_dim_ext (t_time_sk INT,t_time_id CHAR(16),t_time INT,t_hour INT,t_minute INT,t_second INT,t_am_pm CHAR(2),t_shift VARCHAR(6),t_sub_shift VARCHAR(9),t_meal_time VARCHAR(9)) WITH ( LOCATION = '/REPLACE_LOCATION/time_dim/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'warehouse_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.warehouse_ext; CREATE EXTERNAL TABLE stagingTPCDS.warehouse_ext (w_warehouse_sk INT,w_warehouse_id CHAR(16),w_warehouse_name VARCHAR(20),w_warehouse_sq_ft INT,w_street_number VARCHAR(3),w_street_name VARCHAR(16),w_street_type VARCHAR(9),w_suite_number VARCHAR(9),w_city VARCHAR(15),w_county VARCHAR(22),w_state CHAR(2),w_zip CHAR(5),w_country CHAR(13),w_gmt_offset NUMERIC(5,2)) WITH ( LOCATION = '/REPLACE_LOCATION/warehouse/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'web_page_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.web_page_ext; CREATE EXTERNAL TABLE stagingTPCDS.web_page_ext (wp_web_page_sk INT,wp_web_page_id CHAR(16),wp_rec_start_date DATE,wp_rec_end_date DATE,wp_creation_date_sk INT,wp_access_date_sk INT,wp_autogen_flag CHAR(1),wp_customer_sk INT,wp_url CHAR(18),wp_type VARCHAR(9),wp_char_count INT,wp_link_count INT,wp_image_count INT,wp_max_ad_count INT) WITH ( LOCATION = '/REPLACE_LOCATION/web_page/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'web_returns_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.web_returns_ext; CREATE EXTERNAL TABLE stagingTPCDS.web_returns_ext (wr_returned_date_sk INT,wr_returned_time_sk INT,wr_item_sk INT,wr_refunded_customer_sk INT,wr_refunded_cdemo_sk INT,wr_refunded_hdemo_sk INT,wr_refunded_addr_sk INT,wr_returning_customer_sk INT,wr_returning_cdemo_sk INT,wr_returning_hdemo_sk INT,wr_returning_addr_sk INT,wr_web_page_sk INT,wr_reason_sk INT,wr_order_number BIGINT,wr_return_quantity INT,wr_return_amt NUMERIC(7,2),wr_return_tax NUMERIC(7,2),wr_return_amt_inc_tax NUMERIC(7,2),wr_fee NUMERIC(7,2),wr_return_ship_cost NUMERIC(7,2),wr_refunded_cash NUMERIC(7,2),wr_reversed_charge NUMERIC(7,2),wr_account_credit NUMERIC(7,2),wr_net_loss NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/web_returns/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'web_sales_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.web_sales_ext; CREATE EXTERNAL TABLE stagingTPCDS.web_sales_ext (ws_sold_date_sk INT,ws_sold_time_sk INT,ws_ship_date_sk INT,ws_item_sk INT,ws_bill_customer_sk INT,ws_bill_cdemo_sk INT,ws_bill_hdemo_sk INT,ws_bill_addr_sk INT,ws_ship_customer_sk INT,ws_ship_cdemo_sk INT,ws_ship_hdemo_sk INT,ws_ship_addr_sk INT,ws_web_page_sk INT,ws_web_site_sk INT,ws_ship_mode_sk INT,ws_warehouse_sk INT,ws_promo_sk INT,ws_order_number BIGINT,ws_quantity INT,ws_wholesale_cost NUMERIC(7,2),ws_list_price NUMERIC(7,2),ws_sales_price NUMERIC(7,2),ws_ext_discount_amt NUMERIC(7,2),ws_ext_sales_price NUMERIC(7,2),ws_ext_wholesale_cost NUMERIC(7,2),ws_ext_list_price NUMERIC(7,2),ws_ext_tax NUMERIC(7,2),ws_coupon_amt NUMERIC(7,2),ws_ext_ship_cost NUMERIC(7,2),ws_net_paid NUMERIC(7,2),ws_net_paid_inc_tax NUMERIC(7,2),ws_net_paid_inc_ship NUMERIC(7,2),ws_net_paid_inc_ship_tax NUMERIC(7,2),ws_net_profit NUMERIC(7,2)) WITH ( LOCATION = '/REPLACE_LOCATION/web_sales/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nEXECUTE AS user = 'Userstaticrc10'; IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE [name] = 'SynapseParquetFormat') CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] WITH ( FORMAT_TYPE = PARQUET);IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE [name] = 'ds_tpcdsacct_rawdata') CREATE EXTERNAL DATA SOURCE [ds_tpcdsacct_rawdata] WITH (LOCATION   = 'abfss://data@REPLACE_DATALAKE_NAME.dfs.core.windows.net');IF NOT EXISTS(SELECT 1 FROM sys.schemas WHERE [name] = 'stagingTPCDS') EXEC('CREATE SCHEMA stagingTPCDS'); IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'stagingTPCDS' AND [name] = 'web_site_ext' AND is_external = 1) DROP EXTERNAL TABLE stagingTPCDS.web_site_ext; CREATE EXTERNAL TABLE stagingTPCDS.web_site_ext (web_site_sk INT,web_site_id CHAR(16),web_rec_start_date DATE,web_rec_end_date DATE,web_name CHAR(6),web_open_date_sk INT,web_close_date_sk INT,web_class CHAR(7),web_manager VARCHAR(20),web_mkt_id INT,web_mkt_class VARCHAR(50),web_mkt_desc VARCHAR(96),web_market_manager VARCHAR(18),web_company_id INT,web_company_name VARCHAR(5),web_street_number VARCHAR(3),web_street_name VARCHAR(17),web_street_type VARCHAR(9),web_suite_number VARCHAR(9),web_city VARCHAR(15),web_county VARCHAR(22),web_state CHAR(2),web_zip CHAR(5),web_country CHAR(13),web_gmt_offset NUMERIC(5,2),web_tax_percentage NUMERIC(5,2)) WITH ( LOCATION = '/REPLACE_LOCATION/web_site/*.parquet', DATA_SOURCE = [ds_tpcdsacct_rawdata], FILE_FORMAT = [SynapseParquetFormat]);\nSELECT 1 AS a",
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "DS_Synapse_Managed_Identity",
                        "type": "DatasetReference",
                        "parameters": {
                            "DatabaseName": {
                                "value": "@pipeline().parameters.DatabaseName",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "Build Replicated Tables",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "ForEach - Create Tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "SqlDWSource",
                        "sqlReaderQuery": "SELECT *\nFROM\n(\n\tSELECT\t\tCASE WHEN tp.[distribution_policy_desc] = 'REPLICATE' THEN CONCAT('EXECUTE AS USER = ''Userstaticrc10''; SELECT TOP 1 * FROM [', s.name, '].[', t.name, ']; SELECT 1 AS a') ELSE NULL END AS SqlQuery\n\tFROM\t\tsys.schemas s\n\tJOIN\t\tsys.tables t\n\tON\t\t\ts.[schema_id] = t.[schema_id]\n\tJOIN\t\tsys.indexes i\n\tON\t\t\tt.[object_id] = i.[object_id]\n\tAND\t\t\ti.[index_id] <= 1\n\tJOIN\t\tsys.pdw_table_distribution_properties tp\n\tON\t\t\tt.[object_id] = tp.[object_id]\n) AS a\nWHERE SqlQuery IS NOT NULL\n;",
                        "queryTimeout": "24:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "DS_Synapse_Managed_Identity",
                        "type": "DatasetReference",
                        "parameters": {
                            "DatabaseName": {
                                "value": "@pipeline().parameters.DatabaseName",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "ForEach - Table To Build",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Build Replicated Tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Build Replicated Tables').output.value",
                        "type": "Expression"
                    },
                    "activities": [
                        {
                            "name": "Lookup1",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@item().SqlQuery",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "DS_Synapse_Managed_Identity",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "DatabaseName": {
                                            "value": "@pipeline().parameters.DatabaseName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        }
                    ]
                }
            },
            {
                "name": "ForEach - Create Tables - Store Sales",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Filter - store_sales",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Filter - store_sales').output.value",
                        "type": "Expression"
                    },
                    "batchCount": 1,
                    "activities": [
                        {
                            "name": "Lookup - Load From External Table_copy1",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "SqlDWSource",
                                    "sqlReaderQuery": {
                                        "value": "@concat(json(item()).SqlStatement, ';SELECT 1 as a')",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "DS_Synapse_Managed_Identity",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "DatabaseName": {
                                            "value": "@pipeline().parameters.DatabaseName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "firstRowOnly": false
                            }
                        }
                    ]
                }
            },
            {
                "name": "Wait - 5 seconds",
                "type": "Wait",
                "dependsOn": [
                    {
                        "activity": "Filter - All Except store_sales",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "waitTimeInSeconds": 5
                }
            },
            {
                "name": "Filter - store_sales",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "Lookup - Create External Tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@split(variables('JsonStringTables'), '||')",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(json(item()).TableName, 'store_sales')",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Filter - All Except store_sales",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "Lookup - Create External Tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@split(variables('JsonStringTables'), '||')",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@not(equals(json(item()).TableName, 'store_sales'))",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "DatabaseName": {
                "type": "string",
                "defaultValue": "DataWarehouse"
            }
        },
        "variables": {
            "JsonStringTables": {
                "type": "String",
                "defaultValue": "{\"TableName\":\"call_center\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'call_center' AND is_external = 0) DROP TABLE [TPCDS].[call_center]; CREATE TABLE [TPCDS].[call_center] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cc_call_center_sk)) AS SELECT * FROM [stagingTPCDS].[call_center_ext];\"}   ||{\"TableName\":\"catalog_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_page' AND is_external = 0) DROP TABLE [TPCDS].[catalog_page]; CREATE TABLE [TPCDS].[catalog_page] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cp_catalog_page_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_page_ext];\"}   ||{\"TableName\":\"catalog_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_returns' AND is_external = 0) DROP TABLE [TPCDS].[catalog_returns]; CREATE TABLE [TPCDS].[catalog_returns] WITH ( DISTRIBUTION  = HASH(cr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[catalog_returns_ext];\"}   ||{\"TableName\":\"catalog_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_sales' AND is_external = 0) DROP TABLE [TPCDS].[catalog_sales]; CREATE TABLE [TPCDS].[catalog_sales] WITH ( DISTRIBUTION  = HASH(cs_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (cs_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_sales_ext];\"}   ||{\"TableName\":\"customer\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer' AND is_external = 0) DROP TABLE [TPCDS].[customer]; CREATE TABLE [TPCDS].[customer] WITH ( DISTRIBUTION  = ROUND_ROBIN, CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[customer_ext];\"}   ||{\"TableName\":\"customer_address\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_address' AND is_external = 0) DROP TABLE [TPCDS].[customer_address]; CREATE TABLE [TPCDS].[customer_address] WITH ( DISTRIBUTION  = ROUND_ROBIN, CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[customer_address_ext];\"}   ||{\"TableName\":\"customer_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_demographics' AND is_external = 0) DROP TABLE [TPCDS].[customer_demographics]; CREATE TABLE [TPCDS].[customer_demographics] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[customer_demographics_ext];\"}   ||{\"TableName\":\"date_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'date_dim' AND is_external = 0) DROP TABLE [TPCDS].[date_dim]; CREATE TABLE [TPCDS].[date_dim] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[date_dim_ext];\"}   ||{\"TableName\":\"household_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'household_demographics' AND is_external = 0) DROP TABLE [TPCDS].[household_demographics]; CREATE TABLE [TPCDS].[household_demographics] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[household_demographics_ext];\"}   ||{\"TableName\":\"income_band\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'income_band' AND is_external = 0) DROP TABLE [TPCDS].[income_band]; CREATE TABLE [TPCDS].[income_band] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (ib_income_band_sk)) AS SELECT * FROM [stagingTPCDS].[income_band_ext];\"}   ||{\"TableName\":\"inventory\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'inventory' AND is_external = 0) DROP TABLE [TPCDS].[inventory]; CREATE TABLE [TPCDS].[inventory] WITH ( DISTRIBUTION  = HASH(inv_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[inventory_ext];\"}   ||{\"TableName\":\"item\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'item' AND is_external = 0) DROP TABLE [TPCDS].[item]; CREATE TABLE [TPCDS].[item] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[item_ext];\"}   ||{\"TableName\":\"promotion\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'promotion' AND is_external = 0) DROP TABLE [TPCDS].[promotion]; CREATE TABLE [TPCDS].[promotion] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[promotion_ext];\"}   ||{\"TableName\":\"reason\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'reason' AND is_external = 0) DROP TABLE [TPCDS].[reason]; CREATE TABLE [TPCDS].[reason] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (r_reason_sk)) AS SELECT * FROM [stagingTPCDS].[reason_ext];\"}   ||{\"TableName\":\"ship_mode\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'ship_mode' AND is_external = 0) DROP TABLE [TPCDS].[ship_mode]; CREATE TABLE [TPCDS].[ship_mode] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (sm_ship_mode_sk)) AS SELECT * FROM [stagingTPCDS].[ship_mode_ext];\"}   ||{\"TableName\":\"store\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store' AND is_external = 0) DROP TABLE [TPCDS].[store]; CREATE TABLE [TPCDS].[store] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (s_store_sk)) AS SELECT * FROM [stagingTPCDS].[store_ext];\"}   ||{\"TableName\":\"store_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_returns' AND is_external = 0) DROP TABLE [TPCDS].[store_returns]; CREATE TABLE [TPCDS].[store_returns] WITH ( DISTRIBUTION  = HASH(sr_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (sr_returned_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_returns_ext];\"}   ||{\"TableName\":\"store_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc50';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_sales' AND is_external = 0) DROP TABLE [TPCDS].[store_sales]; CREATE TABLE [TPCDS].[store_sales] WITH ( DISTRIBUTION  = HASH(ss_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (ss_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_sales_ext];\"}   ||{\"TableName\":\"time_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'time_dim' AND is_external = 0) DROP TABLE [TPCDS].[time_dim]; CREATE TABLE [TPCDS].[time_dim] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[time_dim_ext];\"}   ||{\"TableName\":\"warehouse\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'warehouse' AND is_external = 0) DROP TABLE [TPCDS].[warehouse]; CREATE TABLE [TPCDS].[warehouse] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (w_warehouse_sk)) AS SELECT * FROM [stagingTPCDS].[warehouse_ext];\"}   ||{\"TableName\":\"web_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_page' AND is_external = 0) DROP TABLE [TPCDS].[web_page]; CREATE TABLE [TPCDS].[web_page] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[web_page_ext];\"}   ||{\"TableName\":\"web_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_returns' AND is_external = 0) DROP TABLE [TPCDS].[web_returns]; CREATE TABLE [TPCDS].[web_returns] WITH ( DISTRIBUTION  = HASH(wr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_returns_ext];\"}   ||{\"TableName\":\"web_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_sales' AND is_external = 0) DROP TABLE [TPCDS].[web_sales]; CREATE TABLE [TPCDS].[web_sales] WITH ( DISTRIBUTION  = HASH(ws_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_sales_ext];\"}   ||{\"TableName\":\"web_site\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_site' AND is_external = 0) DROP TABLE [TPCDS].[web_site]; CREATE TABLE [TPCDS].[web_site] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (web_site_sk)) AS SELECT * FROM [stagingTPCDS].[web_site_ext];\"}"
            },
            "JsonStringTablesNEW": {
                "type": "String",
                "defaultValue": "{\"TableName\":\"call_center\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'call_center' AND is_external = 0) DROP TABLE [TPCDS].[call_center]; CREATE TABLE [TPCDS].[call_center] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cc_call_center_sk)) AS SELECT * FROM [stagingTPCDS].[call_center_ext];\"}   ||{\"TableName\":\"catalog_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_page' AND is_external = 0) DROP TABLE [TPCDS].[catalog_page]; CREATE TABLE [TPCDS].[catalog_page] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cp_catalog_page_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_page_ext];\"}   ||{\"TableName\":\"catalog_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_returns' AND is_external = 0) DROP TABLE [TPCDS].[catalog_returns]; CREATE TABLE [TPCDS].[catalog_returns] WITH ( DISTRIBUTION  = HASH(cr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[catalog_returns_ext];\"}   ||{\"TableName\":\"catalog_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_sales' AND is_external = 0) DROP TABLE [TPCDS].[catalog_sales]; CREATE TABLE [TPCDS].[catalog_sales] WITH ( DISTRIBUTION  = HASH(cs_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (cs_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_sales_ext];\"}   ||{\"TableName\":\"customer\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer' AND is_external = 0) DROP TABLE [TPCDS].[customer]; CREATE TABLE [TPCDS].[customer] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (c_customer_sk)) AS SELECT * FROM [stagingTPCDS].[customer_ext];\"}   ||{\"TableName\":\"customer_address\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_address' AND is_external = 0) DROP TABLE [TPCDS].[customer_address]; CREATE TABLE [TPCDS].[customer_address] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (ca_address_sk)) AS SELECT * FROM [stagingTPCDS].[customer_address_ext];\"}   ||{\"TableName\":\"customer_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_demographics' AND is_external = 0) DROP TABLE [TPCDS].[customer_demographics]; CREATE TABLE [TPCDS].[customer_demographics] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cd_demo_sk)) AS SELECT * FROM [stagingTPCDS].[customer_demographics_ext];\"}   ||{\"TableName\":\"date_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'date_dim' AND is_external = 0) DROP TABLE [TPCDS].[date_dim]; CREATE TABLE [TPCDS].[date_dim] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (d_date_sk)) AS SELECT * FROM [stagingTPCDS].[date_dim_ext];\"}   ||{\"TableName\":\"household_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'household_demographics' AND is_external = 0) DROP TABLE [TPCDS].[household_demographics]; CREATE TABLE [TPCDS].[household_demographics] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (hd_demo_sk)) AS SELECT * FROM [stagingTPCDS].[household_demographics_ext];\"}   ||{\"TableName\":\"income_band\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'income_band' AND is_external = 0) DROP TABLE [TPCDS].[income_band]; CREATE TABLE [TPCDS].[income_band] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (ib_income_band_sk)) AS SELECT * FROM [stagingTPCDS].[income_band_ext];\"}   ||{\"TableName\":\"inventory\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'inventory' AND is_external = 0) DROP TABLE [TPCDS].[inventory]; CREATE TABLE [TPCDS].[inventory] WITH ( DISTRIBUTION  = HASH(inv_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[inventory_ext];\"}   ||{\"TableName\":\"item\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'item' AND is_external = 0) DROP TABLE [TPCDS].[item]; CREATE TABLE [TPCDS].[item] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (i_item_sk)) AS SELECT * FROM [stagingTPCDS].[item_ext];\"}   ||{\"TableName\":\"promotion\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'promotion' AND is_external = 0) DROP TABLE [TPCDS].[promotion]; CREATE TABLE [TPCDS].[promotion] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (p_promo_sk)) AS SELECT * FROM [stagingTPCDS].[promotion_ext];\"}   ||{\"TableName\":\"reason\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'reason' AND is_external = 0) DROP TABLE [TPCDS].[reason]; CREATE TABLE [TPCDS].[reason] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (r_reason_sk)) AS SELECT * FROM [stagingTPCDS].[reason_ext];\"}   ||{\"TableName\":\"ship_mode\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'ship_mode' AND is_external = 0) DROP TABLE [TPCDS].[ship_mode]; CREATE TABLE [TPCDS].[ship_mode] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (sm_ship_mode_sk)) AS SELECT * FROM [stagingTPCDS].[ship_mode_ext];\"}   ||{\"TableName\":\"store\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store' AND is_external = 0) DROP TABLE [TPCDS].[store]; CREATE TABLE [TPCDS].[store] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (s_store_sk)) AS SELECT * FROM [stagingTPCDS].[store_ext];\"}   ||{\"TableName\":\"store_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_returns' AND is_external = 0) DROP TABLE [TPCDS].[store_returns]; CREATE TABLE [TPCDS].[store_returns] WITH ( DISTRIBUTION  = HASH(sr_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (sr_returned_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_returns_ext];\"}   ||{\"TableName\":\"store_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc50';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_sales' AND is_external = 0) DROP TABLE [TPCDS].[store_sales]; CREATE TABLE [TPCDS].[store_sales] WITH ( DISTRIBUTION  = HASH(ss_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (ss_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_sales_ext];\"}   ||{\"TableName\":\"time_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'time_dim' AND is_external = 0) DROP TABLE [TPCDS].[time_dim]; CREATE TABLE [TPCDS].[time_dim] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (t_time_sk)) AS SELECT * FROM [stagingTPCDS].[time_dim_ext];\"}   ||{\"TableName\":\"warehouse\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'warehouse' AND is_external = 0) DROP TABLE [TPCDS].[warehouse]; CREATE TABLE [TPCDS].[warehouse] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (w_warehouse_sk)) AS SELECT * FROM [stagingTPCDS].[warehouse_ext];\"}   ||{\"TableName\":\"web_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_page' AND is_external = 0) DROP TABLE [TPCDS].[web_page]; CREATE TABLE [TPCDS].[web_page] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (wp_web_page_sk)) AS SELECT * FROM [stagingTPCDS].[web_page_ext];\"}   ||{\"TableName\":\"web_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_returns' AND is_external = 0) DROP TABLE [TPCDS].[web_returns]; CREATE TABLE [TPCDS].[web_returns] WITH ( DISTRIBUTION  = HASH(wr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_returns_ext];\"}   ||{\"TableName\":\"web_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_sales' AND is_external = 0) DROP TABLE [TPCDS].[web_sales]; CREATE TABLE [TPCDS].[web_sales] WITH ( DISTRIBUTION  = HASH(ws_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_sales_ext];\"}   ||{\"TableName\":\"web_site\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_site' AND is_external = 0) DROP TABLE [TPCDS].[web_site]; CREATE TABLE [TPCDS].[web_site] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (web_site_sk)) AS SELECT * FROM [stagingTPCDS].[web_site_ext];\"}"
            },
            "JsonStringTablesNEWAGAIN": {
                "type": "String",
                "defaultValue": "{\"TableName\":\"call_center\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'call_center' AND is_external = 0) DROP TABLE [TPCDS].[call_center]; CREATE TABLE [TPCDS].[call_center] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[call_center_ext];\"}    ||{\"TableName\":\"catalog_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_page' AND is_external = 0) DROP TABLE [TPCDS].[catalog_page]; CREATE TABLE [TPCDS].[catalog_page] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cp_catalog_page_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_page_ext];\"}    ||{\"TableName\":\"catalog_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_returns' AND is_external = 0) DROP TABLE [TPCDS].[catalog_returns]; CREATE TABLE [TPCDS].[catalog_returns] WITH ( DISTRIBUTION  = HASH(cr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[catalog_returns_ext];\"}    ||{\"TableName\":\"catalog_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'catalog_sales' AND is_external = 0) DROP TABLE [TPCDS].[catalog_sales]; CREATE TABLE [TPCDS].[catalog_sales] WITH ( DISTRIBUTION  = HASH(cs_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (cs_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[catalog_sales_ext];\"}    ||{\"TableName\":\"customer\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer' AND is_external = 0) DROP TABLE [TPCDS].[customer]; CREATE TABLE [TPCDS].[customer] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[customer_ext];\"}    ||{\"TableName\":\"customer_address\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_address' AND is_external = 0) DROP TABLE [TPCDS].[customer_address]; CREATE TABLE [TPCDS].[customer_address] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[customer_address_ext];\"}    ||{\"TableName\":\"customer_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'customer_demographics' AND is_external = 0) DROP TABLE [TPCDS].[customer_demographics]; CREATE TABLE [TPCDS].[customer_demographics] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (cd_demo_sk)) AS SELECT * FROM [stagingTPCDS].[customer_demographics_ext];\"}    ||{\"TableName\":\"date_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'date_dim' AND is_external = 0) DROP TABLE [TPCDS].[date_dim]; CREATE TABLE [TPCDS].[date_dim] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (d_date_sk)) AS SELECT * FROM [stagingTPCDS].[date_dim_ext];\"}    ||{\"TableName\":\"household_demographics\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'household_demographics' AND is_external = 0) DROP TABLE [TPCDS].[household_demographics]; CREATE TABLE [TPCDS].[household_demographics] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[household_demographics_ext];\"}    ||{\"TableName\":\"income_band\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'income_band' AND is_external = 0) DROP TABLE [TPCDS].[income_band]; CREATE TABLE [TPCDS].[income_band] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[income_band_ext];\"}    ||{\"TableName\":\"inventory\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'inventory' AND is_external = 0) DROP TABLE [TPCDS].[inventory]; CREATE TABLE [TPCDS].[inventory] WITH ( DISTRIBUTION  = HASH(inv_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[inventory_ext];\"}    ||{\"TableName\":\"item\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'item' AND is_external = 0) DROP TABLE [TPCDS].[item]; CREATE TABLE [TPCDS].[item] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (i_item_sk)) AS SELECT * FROM [stagingTPCDS].[item_ext];\"}    ||{\"TableName\":\"promotion\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'promotion' AND is_external = 0) DROP TABLE [TPCDS].[promotion]; CREATE TABLE [TPCDS].[promotion] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[promotion_ext];\"}    ||{\"TableName\":\"reason\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'reason' AND is_external = 0) DROP TABLE [TPCDS].[reason]; CREATE TABLE [TPCDS].[reason] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[reason_ext];\"}    ||{\"TableName\":\"ship_mode\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'ship_mode' AND is_external = 0) DROP TABLE [TPCDS].[ship_mode]; CREATE TABLE [TPCDS].[ship_mode] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[ship_mode_ext];\"}    ||{\"TableName\":\"store\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store' AND is_external = 0) DROP TABLE [TPCDS].[store]; CREATE TABLE [TPCDS].[store] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[store_ext];\"}    ||{\"TableName\":\"store_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_returns' AND is_external = 0) DROP TABLE [TPCDS].[store_returns]; CREATE TABLE [TPCDS].[store_returns] WITH ( DISTRIBUTION  = HASH(sr_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (sr_returned_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_returns_ext];\"}    ||{\"TableName\":\"store_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc50';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'store_sales' AND is_external = 0) DROP TABLE [TPCDS].[store_sales]; CREATE TABLE [TPCDS].[store_sales] WITH ( DISTRIBUTION  = HASH(ss_item_sk), CLUSTERED COLUMNSTORE INDEX ORDER (ss_sold_date_sk)) AS SELECT * FROM [stagingTPCDS].[store_sales_ext];\"}    ||{\"TableName\":\"time_dim\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'time_dim' AND is_external = 0) DROP TABLE [TPCDS].[time_dim]; CREATE TABLE [TPCDS].[time_dim] WITH ( DISTRIBUTION  = REPLICATE, CLUSTERED INDEX (t_time_sk)) AS SELECT * FROM [stagingTPCDS].[time_dim_ext];\"}    ||{\"TableName\":\"warehouse\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'warehouse' AND is_external = 0) DROP TABLE [TPCDS].[warehouse]; CREATE TABLE [TPCDS].[warehouse] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[warehouse_ext];\"}    ||{\"TableName\":\"web_page\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_page' AND is_external = 0) DROP TABLE [TPCDS].[web_page]; CREATE TABLE [TPCDS].[web_page] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[web_page_ext];\"}    ||{\"TableName\":\"web_returns\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_returns' AND is_external = 0) DROP TABLE [TPCDS].[web_returns]; CREATE TABLE [TPCDS].[web_returns] WITH ( DISTRIBUTION  = HASH(wr_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_returns_ext];\"}    ||{\"TableName\":\"web_sales\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc40';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_sales' AND is_external = 0) DROP TABLE [TPCDS].[web_sales]; CREATE TABLE [TPCDS].[web_sales] WITH ( DISTRIBUTION  = HASH(ws_item_sk), CLUSTERED COLUMNSTORE INDEX) AS SELECT * FROM [stagingTPCDS].[web_sales_ext];\"}    ||{\"TableName\":\"web_site\", \"SqlStatement\":\"EXECUTE AS USER = 'Userstaticrc10';IF EXISTS(SELECT 1 FROM sys.tables WHERE SCHEMA_NAME(schema_id) = 'TPCDS' AND [name] = 'web_site' AND is_external = 0) DROP TABLE [TPCDS].[web_site]; CREATE TABLE [TPCDS].[web_site] WITH ( DISTRIBUTION  = REPLICATE, HEAP) AS SELECT * FROM [stagingTPCDS].[web_site_ext];\"}"
            }
        },
        "annotations": [],
        "lastPublishTime": "2022-01-11T21:33:45Z"
    },
    "type": "Microsoft.Synapse/workspaces/pipelines"
}
